import type { Options, Type } from './index'
import { name } from '../package.json'
import fs from 'fs/promises'
import { camelCase } from 'scule'
import { capitalize } from './utils'
import pluralize from 'pluralize'

export async function write_definitions<Schema>(path: string, typings: Type[], base: string) {
  const class_name = pluralize.singular(capitalize(camelCase(base)))
  let code = ''

  code += `/*
 * Generated by ${name}
 *
*/\n`
  code += `declare module "#${base}" {\n`

  code += `  export type ${class_name} = {\n`
  typings.forEach(type => {
    code += `    ${type.name}${type.optional ? '?' : ''}: ${type.type}\n`
  })
  code += `  }\n`

  code += `
  export function list(): Promise<${class_name}[]>
  export function get(id: string): Promise<${class_name}>\n`
  code += `}`

  await fs.appendFile(path, code)
}
